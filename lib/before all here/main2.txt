import 'package:flutter/material.dart';

import 'todos.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  void onSaveTodo(String title, String description, String startDate,
      String endDate, String category, BuildContext context) {
    final homePageState = context.findAncestorStateOfType<_MyHomePageState>();
    homePageState?.addTodo(title, description, startDate, endDate, category);
    Navigator.pop(context);
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Todos',
      theme: ThemeData(
        primarySwatch: Colors.purple,
      ),
      home: const MyHomePage(title: 'Todos'),
      debugShowCheckedModeBanner: false,
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);
  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<Todo> todos = [
    
  ];
  bool? cheked = false;
  int _selectedChipIndex = -1;
  String? _selectedCategory = null;

  void addTodo(String title, String description, String startDate,
      String endDate, String category) {
    setState(() {
      todos.add(Todo(
          title: title,
          description: description,
          startDate: startDate,
          endDate: endDate,
          category: category));
    });
  }

  List<Todo> getFilteredTodos() {
    if (_selectedCategory == null) {
      return todos;
    } else if (_selectedCategory == 'Routine') {
      return todos.where((todo) => todo.category == 'Routine').toList();
    } else {
      return todos.where((todo) => todo.category == _selectedCategory).toList();
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
        centerTitle: true,
        backgroundColor: Colors.purple,
      ),
      body: Column(
        children: [
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Wrap(
              spacing: 8.0,
              children: [
                Container(
                  decoration: BoxDecoration(
                    border: Border.all(
                      color: Colors.blue,
                      width: 2.0,
                    ),
                    borderRadius: BorderRadius.circular(30.0),
                    color: _selectedChipIndex == 0 ? Colors.blue : Colors.white,
                  ),
                  child: InkWell(
                    onTap: () {
                      setState(() {
                        _selectedChipIndex = 0;
                        _selectedCategory = 'Routine';
                      });
                    },
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Routine',
                        style: TextStyle(
                          color: _selectedChipIndex == 0
                              ? Colors.white
                              : Colors.blue,
                        ),
                      ),
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    border: Border.all(
                      color: Colors.red,
                      width: 2.0,
                    ),
                    borderRadius: BorderRadius.circular(30.0),
                    color: _selectedChipIndex == 1 ? Colors.red : Colors.white,
                  ),
                  child: InkWell(
                    onTap: () {
                      setState(() {
                        _selectedChipIndex = 1;
                        _selectedCategory = 'Work';
                      });
                    },
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Work',
                        style: TextStyle(
                          color: _selectedChipIndex == 1
                              ? Colors.white
                              : Colors.red,
                        ),
                      ),
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    border: Border.all(
                      color: Colors.yellow,
                      width: 2.0,
                    ),
                    borderRadius: BorderRadius.circular(30.0),
                    color:
                        _selectedChipIndex == 2 ? Colors.yellow : Colors.white,
                  ),
                  child: InkWell(
                    onTap: () {
                      setState(() {
                        _selectedChipIndex = 2;
                        _selectedCategory = 'Free';
                      });
                    },
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(
                        'Free',
                        style: TextStyle(
                          color: _selectedChipIndex == 2
                              ? Colors.white
                              : Colors.yellow,
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
          Expanded(
            child: ListView.builder(
              itemCount: todos
                  .where((todo) => todo.category == _selectedCategory)
                  .length,
              itemBuilder: (context, index) {
                var todo = todos
                    .where((todo) => todo.category == _selectedCategory)
                    .toList()[index];
                if (_selectedCategory == null) {
                  todo = todos.toList()[index];
                }
                return ListTile(
                  leading: Checkbox(
                    value: cheked,
                    onChanged: (val) => {
                      setState(() {
                        cheked = val;
                      })
                    },
                  ),
                  // leading: CircleAvatar(
                  //   // child: Text('${index + 1}'),
                  // ),
                  title: Text(todo.title),
                  subtitle: Text(todo.description),
                  trailing: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      Container(
                        padding: const EdgeInsets.symmetric(
                            horizontal: 2, vertical: 2),
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(5),
                          color: Colors.blue,
                        ),
                        child: Text(
                          todo.category,
                          style: const TextStyle(
                            fontSize: 11,
                            color: Colors.white,
                          ),
                        ),
                      ),
                      Text(
                        '${todo.startDate} s/d',
                        style: const TextStyle(
                          fontSize: 10,
                        ),
                      ),
                      Text(
                        '${todo.endDate} s/d',
                        style: const TextStyle(
                          fontSize: 10,
                        ),
                      ),
                    ],
                  ),
                );
              },
            ),
          ),
        ],
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          Navigator.push(
              context,
              MaterialPageRoute(
                  builder: ((context) => Todos(onSaveTodo: addTodo))));
        },
        child: const Icon(Icons.add),
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,
    );
  }
}

class Todo {
  final String title;
  final String description;
  final String startDate;
  final String endDate;
  final String category;

  Todo(
      {required this.title,
      required this.description,
      required this.startDate,
      required this.endDate,
      required this.category});
}
